"""Class & methods that define the board and allow it to be used"""

"""Representation of all of the tiles in the Pac-Man board.
d - pac-dot is present
e - tile is empty
/ - tile has a wall/cannot be moved through
p - power pellet is present"""

BOARDTEMPLATE = [['/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/'],
['/','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','/'],
['/','d','/','/','/','/','d','/','/','/','/','/','d','/','/','d','/','/','/','/','/','d','/','/','/','/','d','/'],
['/','p','/','/','/','/','d','/','/','/','/','/','d','/','/','d','/','/','/','/','/','d','/','/','/','/','p','/'],
['/','d','/','/','/','/','d','/','/','/','/','/','d','/','/','d','/','/','/','/','/','d','/','/','/','/','d','/'],
['/','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','/'],
['/','d','/','/','/','/','d','/','/','d','/','/','/','/','/','/','/','/','d','/','/','d','/','/','/','/','d','/'],
['/','d','/','/','/','/','d','/','/','d','/','/','/','/','/','/','/','/','d','/','/','d','/','/','/','/','d','/'],
['/','d','d','d','d','d','d','/','/','d','d','d','d','/','/','d','d','d','d','/','/','d','d','d','d','d','d','/'],
['/','/','/','/','/','/','d','/','/','/','/','/','e','/','/','e','/','/','/','/','/','d','/','/','/','/','/','/'],
['/','/','/','/','/','/','d','/','/','/','/','/','e','/','/','e','/','/','/','/','/','d','/','/','/','/','/','/'],
['/','/','/','/','/','/','d','/','/','e','e','e','e','e','e','e','e','e','e','/','/','d','/','/','/','/','/','/'],
['/','/','/','/','/','/','d','/','/','e','/','/','/','/','/','/','/','/','e','/','/','d','/','/','/','/','/','/'],
['/','/','/','/','/','/','d','/','/','e','/','/','/','/','/','/','/','/','e','/','/','d','/','/','/','/','/','/'],
['e','e','e','e','e','e','d','e','e','e','/','/','/','/','/','/','/','/','e','e','e','d','e','e','e','e','e','e'],
['/','/','/','/','/','/','d','/','/','e','/','/','/','/','/','/','/','/','e','/','/','d','/','/','/','/','/','/'],
['/','/','/','/','/','/','d','/','/','e','/','/','/','/','/','/','/','/','e','/','/','d','/','/','/','/','/','/'],
['/','/','/','/','/','/','d','/','/','e','e','e','e','e','e','e','e','e','e','/','/','d','/','/','/','/','/','/'],
['/','/','/','/','/','/','d','/','/','e','/','/','/','/','/','/','/','/','e','/','/','d','/','/','/','/','/','/'],
['/','/','/','/','/','/','d','/','/','e','/','/','/','/','/','/','/','/','e','/','/','d','/','/','/','/','/','/'],
['/','d','d','d','d','d','d','d','d','d','d','d','d','/','/','d','d','d','d','d','d','d','d','d','d','d','d','/'],
['/','d','/','/','/','/','d','/','/','/','/','/','d','/','/','d','/','/','/','/','/','d','/','/','/','/','d','/'],
['/','d','/','/','/','/','d','/','/','/','/','/','d','/','/','d','/','/','/','/','/','d','/','/','/','/','d','/'],
['/','p','d','d','/','/','d','d','d','d','d','d','d','e','e','d','d','d','d','d','d','d','/','/','d','d','p','/'],
['/','/','/','d','/','/','d','/','/','d','/','/','/','/','/','/','/','/','d','/','/','d','/','/','d','/','/','/'],
['/','/','/','d','/','/','d','/','/','d','/','/','/','/','/','/','/','/','d','/','/','d','/','/','d','/','/','/'],
['/','d','d','d','d','d','d','/','/','d','d','d','d','/','/','d','d','d','d','/','/','d','d','d','d','d','d','/'],
['/','d','/','/','/','/','/','/','/','/','/','/','d','/','/','d','/','/','/','/','/','/','/','/','/','/','d','/'],
['/','d','/','/','/','/','/','/','/','/','/','/','d','/','/','d','/','/','/','/','/','/','/','/','/','/','d','/'],
['/','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d','/'],
['/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/']]


class Board():
    def __init__(self):
        self.tiles = BOARDTEMPLATE
        self.bonuses = 2

    def attemptMove(self, row, col, direction):
        #Calculate the position to move to:
        newrow = row + direction[0]
        newcol = col + direction[1]

        #Check to see if the intended position is blocked.
        if self.tiles[newrow[newcol]] != '/':
            return newrow, newcol
        return row, col
